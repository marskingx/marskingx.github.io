{
  "name": "lazytoberich-blog",
  "description": "懶得變有錢理財部落格 - Hugo + TailwindCSS + 圖片優化系統",
  "version": "3.4.0",
  "license": "MIT",
  "author": "懶大 <lazytoberich@gmail.com>",
  "scripts": {
    "dev": "hugo server",
    "build": "hugo --gc --minify --templateMetrics --templateMetricsHints --forceSyncStatic",
    "preview": "hugo server --disableFastRender --navigateToChanged --templateMetrics --templateMetricsHints --watch --forceSyncStatic -e production --minify",
    "dev:example": "cd exampleSite && hugo server",
    "build:example": "cd exampleSite && hugo --gc --minify --templateMetrics --templateMetricsHints --forceSyncStatic",
    "preview:example": "cd exampleSite && hugo server --disableFastRender --navigateToChanged --templateMetrics --templateMetricsHints --watch --forceSyncStatic -e production --minify",
    "update-modules": "node ./scripts/clear-modules.js && hugo mod clean --all && hugo mod get -u ./... && hugo mod tidy",
    "remove-darkmode": "node ./scripts/remove-darkmode.js && yarn format",
    "project-setup": "node ./scripts/project-setup.js",
    "theme-setup": "node ./scripts/theme-setup.js",
    "update-theme": "node ./scripts/theme-update.js",
    "format": "prettier -w .",
    "memory:update": "node ./scripts/update-memory.js",
    "memory:backup": "cp .kiro/steering/project-memory.md .kiro/steering/project-memory.backup.md",
    "memory:validate": "node ./scripts/validate-memory.js",
    "ai-memory:manage": "node ./docs/ai-memory/tools/memory-manager.js",
    "ai-memory:backup": "node -e \"const fs=require('fs'); const path='docs/ai-memory/backups'; if(!fs.existsSync(path)) fs.mkdirSync(path,{recursive:true}); const t=new Date().toISOString().replace(/[:.]/g,'-'); fs.copyFileSync('docs/ai-memory/project-memory.md', `${path}/project-memory-${t}.md`); console.log('✅ 備份完成');\"",
    "gemini:setup": "node ./docs/ai-memory/tools/gemini-memory-loader.js",
    "gemini:auto-load": "node ./docs/ai-memory/tools/gemini-auto-loader.js",
    "gemini:install": "npm install @google/generative-ai",
    "claude:memory": "node ./scripts/claude-memory-manager.js",
    "claude:backup": "node -e \"const fs=require('fs'),path=require('path'); const dir='.claude-backups'; if(!fs.existsSync(dir)) fs.mkdirSync(dir); const t=new Date().toISOString().split('T')[0]; fs.copyFileSync('CLAUDE.md', path.join(dir,`CLAUDE-${t}.md`)); console.log('✅ CLAUDE.md 備份完成');\"",
    "claude:status": "node -e \"const fs=require('fs'); if(fs.existsSync('CLAUDE.md')){const c=fs.readFileSync('CLAUDE.md','utf8'), s=c.split('\\n').filter(l=>l.startsWith('##')).length, t=c.split('\\n').filter(l=>l.includes('- [ ]')).length; console.log(`📊 CLAUDE.md 狀態: ${s}個區段, ${t}個待辦事項, ${Math.round(fs.statSync('CLAUDE.md').size/1024*100)/100}KB`);} else console.log('❌ CLAUDE.md 不存在');\",",
    "images:analyze": "node ./scripts/optimize-images.js",
    "images:clean": "rimraf resources/_gen/images",
    "images:rebuild": "npm run images:clean && npm run build",
    "perf:analyze": "node ./scripts/performance-analyzer.js",
    "perf:build": "npm run build && npm run perf:analyze",
    "schema:validate": "node ./scripts/structured-data-validator.js",
    "schema:build": "npm run build && npm run schema:validate",
    "images:optimize": "node ./scripts/optimize-large-images.js",
    "images:preview": "node ./scripts/optimize-large-images.js --dry-run",
    "version:content": "node ./scripts/version-manager.js content",
    "version:patch": "node ./scripts/version-manager.js patch",
    "version:minor": "node ./scripts/version-manager.js minor",
    "version:major": "node ./scripts/version-manager.js major",
    "version:show": "node ./scripts/version-manager.js show",
    "version:changelog": "node ./scripts/version-manager.js changelog",
    "push": "git push origin main",
    "push:tags": "git push origin main && git push --tags",
    "content:process": "node ./scripts/content-workflow.js process",
    "content:batch": "node ./scripts/content-workflow.js batch",
    "content:publish": "node ./scripts/content-workflow.js publish",
    "content:validate": "node ./scripts/content-validator.js --dir",
    "content:validate:file": "node ./scripts/content-validator.js",
    "content:new": "node ./scripts/create-new-post.js",
    "ai:status": "node ./scripts/multi-ai-manager.js status",
    "ai:sync": "node ./scripts/multi-ai-manager.js sync",
    "ai:conflicts": "node ./scripts/multi-ai-manager.js conflicts",
    "ai:rebase": "node ./scripts/multi-ai-manager.js rebase",
    "ai:memory": "node ./scripts/multi-ai-manager.js memory",
    "conflict:check": "node ./scripts/conflict-prevention.js check",
    "conflict:precommit": "node ./scripts/conflict-prevention.js precommit",
    "conflict:rules": "node ./scripts/conflict-prevention.js rules",
    "conflict:lock": "node ./scripts/conflict-prevention.js lock",
    "conflict:unlock": "node ./scripts/conflict-prevention.js unlock",
    "memory:status": "node ./scripts/private-repo-handler.js status",
    "memory:sync": "node ./scripts/ai-memory-sync.js sync",
    "memory:clean": "node ./scripts/ai-memory-sync.js clean",
    "memory:structure": "node ./scripts/ai-memory-sync.js structure",
    "setup:hooks": "node ./scripts/git-hooks-setup.js",
    "setup:quality": "npm install --save-dev eslint markdownlint-cli stylelint stylelint-config-standard stylelint-prettier",
    "lint": "eslint --fix .",
    "lint:md": "markdownlint **/*.md --fix",
    "lint:css": "stylelint **/*.css **/*.scss --fix",
    "lint:all": "npm run lint && npm run lint:md && npm run lint:css",
    "release:start": "node ./scripts/release-manager.js start",
    "release:deploy": "npm run build && npm run push && echo '🚀 部署完成'",
    "memory:push": "node ./scripts/private-repo-handler.js push",
    "memory:pull": "node ./scripts/private-repo-handler.js pull",
    "memory:tag": "node ./scripts/private-repo-handler.js tag",
    "memory:help": "node -e \"console.log('\\n🧠 記憶同步管理工具\\n'); console.log('npm run memory:push [msg]   # 推送記憶到私有儲存庫'); console.log('npm run memory:pull         # 從私有儲存庫拉取記憶'); console.log('npm run memory:status       # 檢查私有儲存庫狀態'); console.log('npm run memory:tag <name>   # 建立並推送標籤'); console.log('npm run release:start      # 開始互動式發布流程\\n');\"",
    "smart:commit": "node ./scripts/smart-git-manager.js commit",
    "smart:push": "node ./scripts/smart-git-manager.js push",
    "smart:release": "node ./scripts/smart-git-manager.js release",
    "smart:analyze": "node ./scripts/smart-git-manager.js analyze",
    "smart:help": "node ./scripts/smart-git-manager.js",
    "smart:pull": "node ./scripts/smart-git-pull.js pull",
    "上版": "npm run smart:release",
    "下拉": "npm run smart:pull",
    "test:system": "node ./scripts/system-test.js",
    "test:system:verbose": "node ./scripts/system-test.js --verbose",
    "ai:help": "node -e \"console.log('\\n🤖 多 AI 協作管理工具\\n'); console.log('npm run ai:status        # 檢查所有 AI 狀態'); console.log('npm run ai:sync          # 同步所有分支'); console.log('npm run ai:conflicts     # 檢查潛在衝突'); console.log('npm run memory:status    # 檢查記憶檔案狀態'); console.log('npm run memory:sync      # 同步記憶檔案'); console.log('npm run conflict:check   # 檢查當前變更風險'); console.log('npm run conflict:precommit # 提交前安全檢查'); console.log('npm run conflict:rules   # 顯示協作規則\\n');\"",
    "content:help": "node -e \"console.log('\\n📝 內容管理工具\\n'); console.log('npm run content:new           # 建立新文章'); console.log('npm run content:process       # 處理 Notion 匯出檔案'); console.log('npm run content:batch         # 批量處理 Notion 檔案'); console.log('npm run content:validate      # 驗證所有文章'); console.log('npm run content:validate:file # 驗證單一檔案'); console.log('npm run content:publish       # 一鍵發布文章\\n');\""
  },
  "devDependencies": {
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/typography": "^0.5.13",
    "autoprefixer": "^10.4.19",
    "eslint": "^9.34.0",
    "hugo-extended": "^0.148.2",
    "jsdom": "^26.1.0",
    "markdownlint-cli": "^0.45.0",
    "postcss": "^8.4.38",
    "postcss-cli": "^11.0.0",
    "prettier": "^3.2.5",
    "prettier-plugin-go-template": "0.0.15",
    "prettier-plugin-tailwindcss": "^0.5.14",
    "stylelint": "^16.23.1",
    "stylelint-config-standard": "^39.0.0",
    "stylelint-prettier": "^5.0.3",
    "tailwind-bootstrap-grid": "^5.1.0",
    "tailwindcss": "^3.4.3"
  },
  "dependencies": {
    "@google/gemini-cli": "^0.1.22",
    "axios": "^1.11.0",
    "front-matter": "^4.0.2"
  }
}
